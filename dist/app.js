(()=>{"use strict";class t{constructor(t,e,i,s,n){this.foodSize=t,this.foodColor=e,this.foodBorderColor=i,this.XLimit=s,this.YLimit=n}get xCoordinate(){return this.x}get yCoordinate(){return this.y}drawOnCanvas(t){t.fillStyle=this.foodColor,t.strokeStyle=this.foodBorderColor,t.fillRect(this.x,this.y,this.foodSize,this.foodSize),t.strokeRect(this.x,this.y,this.foodSize,this.foodSize)}generateCoordinates(t){for(this.x=this.getRandomCoordinate(0,this.XLimit-this.foodSize),this.y=this.getRandomCoordinate(0,this.YLimit-this.foodSize);this.foodCollidesWithSnake(t);)this.generateCoordinates(t)}foodCollidesWithSnake(t){return t.some((t=>t.x===this.x&&t.y===this.y))}getRandomCoordinate(t,e){return Math.round((Math.random()*(e-t)+t)/this.foodSize)*this.foodSize}}class e{constructor(t){this.snakeGame=t,this.gameHasStarted=!1,document.addEventListener("keydown",this)}handleEvent(t){const e=t.code;"Space"===e?this.handleSpacebar():"KeyR"===e?this.handleRKey():this.snakeGame.snake.changeDirection(e)}handleSpacebar(){document.getElementById("dark_mode_input")!==document.activeElement&&(!1===this.gameHasStarted?(this.snakeGame.start(),this.gameHasStarted=!0):this.snakeGame.isGameRunning()?this.snakeGame.pause():this.snakeGame.resume())}handleRKey(){this.snakeGame.restart(),this.gameHasStarted=!1}}class i{constructor(t){this.snakeGame=t,this.mobileArrowsDiv=document.getElementById("mobile-arrows"),this.gameControlButtons=document.querySelectorAll(".game-controls-container button"),this.mobileArrowsDiv.addEventListener("click",(t=>this.handleArrowsEvent(t))),this.gameControlButtons.forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.dataset.toggle;this.handleGameControlButtons(e)}))}))}handleArrowsEvent(t){const e=t.target.closest("button");null!==e&&e.dataset.code&&this.snakeGame.snake.changeDirection(e.dataset.code)}handleGameControlButtons(t){let e;"start"===t?e="Space":"restart"===t&&(e="KeyR"),document.dispatchEvent(new KeyboardEvent("keydown",{code:e}))}}class s{constructor(t){this.snakeGame=t,this.foodEatenAudio=new Audio("./dist/sounds/eat-food.wav"),this.scoreSpan=document.getElementById("score"),this.scoreAnimationSpan=document.querySelector(".score-animation"),document.addEventListener("food-eaten",(()=>this.increaseScore())),document.addEventListener("reset-score",(()=>this.resetScore())),document.addEventListener("check-highscore",(()=>this.checkHighscore()))}increaseScore(){let t=this.scoreSpan.innerHTML,e=parseInt(t)+1;this.scoreSpan.innerHTML=e.toString(),this.playScoreAnimation(),this.foodEatenAudio.play()}resetScore(){this.scoreSpan.innerHTML="0"}checkHighscore(){parseInt(this.scoreSpan.innerHTML),parseInt(localStorage.getItem("high-score"))}playScoreAnimation(){this.scoreAnimationSpan.classList.add("animated"),this.scoreAnimationSpan.addEventListener("animationend",(()=>{this.scoreAnimationSpan.classList.remove("animated")}))}}class n{constructor(t){this.snakeGame=t,this.optionsModal=document.querySelector(".options"),this.optionsModalOpenButton=document.querySelector(".btn--open-modal"),this.optionsModalCloseButton=document.querySelector(".btn--close-modal"),this.darkModeInput=document.getElementById("dark_mode_input"),this.difficultyController=document.getElementById("game-difficulty"),this.optionsModalOpenButton.addEventListener("click",(t=>this.openOptionsModal())),this.optionsModalCloseButton.addEventListener("click",(t=>this.closeOptionsModal())),this.darkModeInput.addEventListener("change",(t=>this.changeTheme())),this.difficultyController.addEventListener("change",(t=>this.changeDifficulty(t)))}openOptionsModal(){this.optionsModal.classList.add("open"),this.snakeGame.pause()}closeOptionsModal(){this.optionsModal.classList.remove("open")}changeTheme(){this.snakeGame.switchColorTheme()}changeDifficulty(t){const e=this.getNewDifficulty();this.snakeGame.changeDifficulty(e),this.difficultyController.blur()}getNewDifficulty(){const t=this.difficultyController.selectedIndex,e=this.difficultyController.options[t].value;return parseInt(e)}}let a,o;a=o=matchMedia("(max-width: 576px)").matches?window.innerWidth-50:500;const h=new class{constructor(t="snakeBoard",e=300,i=300,s="#be8984"){this.width=e,this.height=i,this.backgroundColor=s,this.colorTheme="white",this.canvas=document.getElementById(t),this.ctx=this.canvas.getContext("2d"),this.adjustDimensions(this.width,this.height)}adjustDimensions(t,e){this.canvas.setAttribute("width",t.toString()),this.canvas.setAttribute("height",e.toString()),this.canvas.style.width=t+"px",this.canvas.style.height=e+"px"}clear(){this.ctx.fillStyle=this.backgroundColor,this.ctx.fillRect(0,0,this.width,this.height)}drawElement(t){t.drawOnCanvas(this.ctx)}setWhiteMode(){this.backgroundColor="#be8984",this.colorTheme="white"}setDarkMode(){this.backgroundColor="black",this.colorTheme="dark"}switchColorTheme(){"white"==this.colorTheme?this.setDarkMode():this.setWhiteMode()}}("snakeBoard",a,o),r=new class{constructor(t,e,i){this.tileSize=t,this.tileColor=e,this.headColor=i,this.initialXPos=100,this.initialYPos=100,this.numOfStartingBlocks=4,this.verticalSpeed=0,this.horizontalSpeed=-1*this.tileSize,this.canChangeDirection=!0,this._tiles=[],this.resetCoordinates()}get tiles(){return this._tiles}get snakeHead(){return this.tiles[0]}hasSnakeEatenFood(t,e){return t.x===e.xCoordinate&&t.y===e.yCoordinate}dispatchFoodEatenEvent(){document.dispatchEvent(new Event("food-eaten"))}drawSnakeTile(t,e,i){i.fillStyle=0===e?this.headColor:this.tileColor,i.strokeStyle="darkblue";const{x:s,y:n}=t;i.fillRect(s,n,this.tileSize,this.tileSize),i.strokeRect(s,n,this.tileSize,this.tileSize)}drawOnCanvas(t){this.tiles.forEach(((e,i)=>{this.drawSnakeTile(e,i,t)}))}move(t){const e={x:this.tiles[0].x+this.horizontalSpeed,y:this.tiles[0].y+this.verticalSpeed};this.tiles.unshift(e),this.hasSnakeEatenFood(e,t)?(t.generateCoordinates(this.tiles),this.dispatchFoodEatenEvent()):this.tiles.pop(),this.canChangeDirection=!0}resetDirection(){this.horizontalSpeed=-1*this.tileSize,this.verticalSpeed=0}resetCoordinates(){this.resetDirection(),this._tiles=[];let t=this.initialXPos,e=this.initialYPos;for(let i=0;i<this.numOfStartingBlocks;i++)this.tiles.push({x:t,y:e}),t+=this.tileSize}changeDirection(t){if(!1===this.canChangeDirection)return;this.canChangeDirection=!1;const e=this.verticalSpeed===-1*this.tileSize,i=this.verticalSpeed===this.tileSize,s=this.horizontalSpeed===this.tileSize,n=this.horizontalSpeed===-1*this.tileSize;"ArrowLeft"!==t||s?"ArrowRight"!==t||n?"ArrowUp"!==t||i?"ArrowDown"!==t||e||(this.horizontalSpeed=0,this.verticalSpeed=this.tileSize):(this.horizontalSpeed=0,this.verticalSpeed=-1*this.tileSize):(this.horizontalSpeed=this.tileSize,this.verticalSpeed=0):(this.horizontalSpeed=-1*this.tileSize,this.verticalSpeed=0)}}(20,"darkgreen","yellow");var d;d=new class{constructor(e,i){this.snake=e,this.canvas=i,this.gameSpeed=300,this.food=new t(this.snake.tileSize,"lightgreen","yellow",this.canvas.width,this.canvas.height),this.initialRender()}hasSnakeGameEnded(){const t=this.snake.snakeHead;return function(e){for(let i=4;i<e.snake.tiles.length;i++)if(e.snake.tiles[i].x===t.x&&e.snake.tiles[i].y===t.y)return!0;return!1}(this)||function(e){const i=t.x<0,s=t.x>e.canvas.width-e.snake.tileSize,n=t.y<0,a=t.y>e.canvas.height-e.snake.tileSize;return i||s||n||a}(this)}dispatchResetScoreEvent(){document.dispatchEvent(new Event("reset-score"))}initialRender(){this.canvas.clear(),this.canvas.drawElement(this.snake)}renderGame(){if(this.hasSnakeGameEnded())return clearInterval(this.gameInterval),this.running=!1,this.changeGameState('You died :( Press "R" to restart the game.'),void document.dispatchEvent(new Event("check-highscore"));this.canvas.clear(),this.snake.move(this.food),this.canvas.drawElement(this.snake),this.canvas.drawElement(this.food)}start(){this.running||(this.gameInterval=setInterval(this.renderGame.bind(this),this.gameSpeed),this.food.generateCoordinates(this.snake.tiles),this.running=!0,this.changeGameState(""))}pause(){clearInterval(this.gameInterval),this.running=!1,this.changeGameState("Paused...")}resume(){this.running||(this.gameInterval=setInterval(this.renderGame.bind(this),this.gameSpeed),this.running=!0,this.changeGameState(""))}restart(){this.snake.resetCoordinates(),this.dispatchResetScoreEvent(),this.changeGameState(""),this.running=!1,clearInterval(this.gameInterval),this.food.generateCoordinates(this.snake.tiles),this.initialRender()}isGameRunning(){return this.running}switchColorTheme(){document.documentElement.classList.toggle("dark"),this.canvas.switchColorTheme(),this.canvas.clear(),this.canvas.drawElement(this.snake),this.canvas.drawElement(this.food)}changeDifficulty(t){this.gameSpeed=t,this.isGameRunning()&&(clearInterval(this.gameInterval),this.gameInterval=setInterval(this.renderGame.bind(this),this.gameSpeed))}changeGameState(t){document.querySelector(".game-state").innerHTML=t}}(r,h),new e(d),new i(d),new s(d),new n(d)})();